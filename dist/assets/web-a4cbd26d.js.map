{"version":3,"file":"web-a4cbd26d.js","sources":["../../node_modules/@firebase/installations/dist/esm/index.esm2017.js","../../node_modules/@firebase/messaging/dist/esm/index.esm2017.js","../../node_modules/@capacitor-firebase/messaging/dist/esm/web.js"],"sourcesContent":["import { _getProvider, getApp, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.6.18\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst PENDING_TIMEOUT_MS = 10000;\nconst PACKAGE_VERSION = `w:${version}`;\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nconst SERVICE = 'installations';\nconst SERVICE_NAME = 'Installations';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_DESCRIPTION_MAP = {\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n    [\"not-registered\" /* ErrorCode.NOT_REGISTERED */]: 'Firebase Installation is not registered.',\n    [\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\n    [\"request-failed\" /* ErrorCode.REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n    [\"app-offline\" /* ErrorCode.APP_OFFLINE */]: 'Could not process request. Application offline.',\n    [\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\n};\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n    return (error instanceof FirebaseError &&\n        error.code.includes(\"request-failed\" /* ErrorCode.REQUEST_FAILED */));\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getInstallationsEndpoint({ projectId }) {\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n    return {\n        token: response.token,\n        requestStatus: 2 /* RequestStatus.COMPLETED */,\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n        creationTime: Date.now()\n    };\n}\nasync function getErrorFromResponse(requestName, response) {\n    const responseJson = await response.json();\n    const errorData = responseJson.error;\n    return ERROR_FACTORY.create(\"request-failed\" /* ErrorCode.REQUEST_FAILED */, {\n        requestName,\n        serverCode: errorData.code,\n        serverMessage: errorData.message,\n        serverStatus: errorData.status\n    });\n}\nfunction getHeaders({ apiKey }) {\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\n    const headers = getHeaders(appConfig);\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\n    return headers;\n}\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nasync function retryIfServerError(fn) {\n    const result = await fn();\n    if (result.status >= 500 && result.status < 600) {\n        // Internal Server Error. Retry request.\n        return fn();\n    }\n    return result;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n    // This works because the server will never respond with fractions of a second.\n    return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\n    const endpoint = getInstallationsEndpoint(appConfig);\n    const headers = getHeaders(appConfig);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        fid,\n        authVersion: INTERNAL_AUTH_VERSION,\n        appId: appConfig.appId,\n        sdkVersion: PACKAGE_VERSION\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2 /* RequestStatus.COMPLETED */,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n        };\n        return registeredInstallationEntry;\n    }\n    else {\n        throw await getErrorFromResponse('Create Installation', response);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bufferToBase64UrlSafe(array) {\n    const b64 = btoa(String.fromCharCode(...array));\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nconst INVALID_FID = '';\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nfunction generateFid() {\n    try {\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n        // bytes. our implementation generates a 17 byte array instead.\n        const fidByteArray = new Uint8Array(17);\n        const crypto = self.crypto || self.msCrypto;\n        crypto.getRandomValues(fidByteArray);\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n        const fid = encode(fidByteArray);\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n    }\n    catch (_a) {\n        // FID generation errored\n        return INVALID_FID;\n    }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\n    // Remove the 23rd character that was added because of the extra 4 bits at the\n    // end of our 17 byte array, and the '=' padding.\n    return b64String.substr(0, 22);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n    return `${appConfig.appName}!${appConfig.appId}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst fidChangeCallbacks = new Map();\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nfunction fidChanged(appConfig, fid) {\n    const key = getKey(appConfig);\n    callFidChangeCallbacks(key, fid);\n    broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n    // Open the broadcast channel if it's not already open,\n    // to be able to listen to change events from other tabs.\n    getBroadcastChannel();\n    const key = getKey(appConfig);\n    let callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        callbackSet = new Set();\n        fidChangeCallbacks.set(key, callbackSet);\n    }\n    callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n    const key = getKey(appConfig);\n    const callbackSet = fidChangeCallbacks.get(key);\n    if (!callbackSet) {\n        return;\n    }\n    callbackSet.delete(callback);\n    if (callbackSet.size === 0) {\n        fidChangeCallbacks.delete(key);\n    }\n    // Close broadcast channel if there are no more callbacks.\n    closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n    const callbacks = fidChangeCallbacks.get(key);\n    if (!callbacks) {\n        return;\n    }\n    for (const callback of callbacks) {\n        callback(fid);\n    }\n}\nfunction broadcastFidChange(key, fid) {\n    const channel = getBroadcastChannel();\n    if (channel) {\n        channel.postMessage({ key, fid });\n    }\n    closeBroadcastChannel();\n}\nlet broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n        broadcastChannel.onmessage = e => {\n            callFidChangeCallbacks(e.data.key, e.data.fid);\n        };\n    }\n    return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n        broadcastChannel.close();\n        broadcastChannel = null;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n            upgrade: (db, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through\n                // behavior is what we want, because if there are multiple versions between\n                // the old version and the current version, we want ALL the migrations\n                // that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        db.createObjectStore(OBJECT_STORE_NAME);\n                }\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function set(appConfig, value) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await objectStore.get(key));\n    await objectStore.put(value, key);\n    await tx.done;\n    if (!oldValue || oldValue.fid !== value.fid) {\n        fidChanged(appConfig, value.fid);\n    }\n    return value;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function remove(appConfig) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    await tx.done;\n}\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nasync function update(appConfig, updateFn) {\n    const key = getKey(appConfig);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    const store = tx.objectStore(OBJECT_STORE_NAME);\n    const oldValue = (await store.get(key));\n    const newValue = updateFn(oldValue);\n    if (newValue === undefined) {\n        await store.delete(key);\n    }\n    else {\n        await store.put(newValue, key);\n    }\n    await tx.done;\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n        fidChanged(appConfig, newValue.fid);\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nasync function getInstallationEntry(installations) {\n    let registrationPromise;\n    const installationEntry = await update(installations.appConfig, oldEntry => {\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n        registrationPromise = entryWithPromise.registrationPromise;\n        return entryWithPromise.installationEntry;\n    });\n    if (installationEntry.fid === INVALID_FID) {\n        // FID generation failed. Waiting for the FID from the server.\n        return { installationEntry: await registrationPromise };\n    }\n    return {\n        installationEntry,\n        registrationPromise\n    };\n}\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n    const entry = oldEntry || {\n        fid: generateFid(),\n        registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n    };\n    return clearTimedOutRequest(entry);\n}\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n    if (installationEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        if (!navigator.onLine) {\n            // Registration required but app is offline.\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */));\n            return {\n                installationEntry,\n                registrationPromise: registrationPromiseWithError\n            };\n        }\n        // Try registering. Change status to IN_PROGRESS.\n        const inProgressEntry = {\n            fid: installationEntry.fid,\n            registrationStatus: 1 /* RequestStatus.IN_PROGRESS */,\n            registrationTime: Date.now()\n        };\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\n        return { installationEntry: inProgressEntry, registrationPromise };\n    }\n    else if (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        return {\n            installationEntry,\n            registrationPromise: waitUntilFidRegistration(installations)\n        };\n    }\n    else {\n        return { installationEntry };\n    }\n}\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(installations, installationEntry) {\n    try {\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\n        return set(installations.appConfig, registeredInstallationEntry);\n    }\n    catch (e) {\n        if (isServerError(e) && e.customData.serverCode === 409) {\n            // Server returned a \"FID cannot be used\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            // Registration failed. Set FID as not registered.\n            await set(installations.appConfig, {\n                fid: installationEntry.fid,\n                registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n            });\n        }\n        throw e;\n    }\n}\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(installations) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateInstallationRequest(installations.appConfig);\n    while (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // createInstallation request still in progress.\n        await sleep(100);\n        entry = await updateInstallationRequest(installations.appConfig);\n    }\n    if (entry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\n        if (registrationPromise) {\n            return registrationPromise;\n        }\n        else {\n            // if there is no registrationPromise, entry is registered.\n            return installationEntry;\n        }\n    }\n    return entry;\n}\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!oldEntry) {\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* ErrorCode.INSTALLATION_NOT_FOUND */);\n        }\n        return clearTimedOutRequest(oldEntry);\n    });\n}\nfunction clearTimedOutRequest(entry) {\n    if (hasInstallationRequestTimedOut(entry)) {\n        return {\n            fid: entry.fid,\n            registrationStatus: 0 /* RequestStatus.NOT_STARTED */\n        };\n    }\n    return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n    return (installationEntry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    // If heartbeat service exists, add the heartbeat string to the header.\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\n        optional: true\n    });\n    if (heartbeatService) {\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n        if (heartbeatsHeader) {\n            headers.append('x-firebase-client', heartbeatsHeader);\n        }\n    }\n    const body = {\n        installation: {\n            sdkVersion: PACKAGE_VERSION,\n            appId: appConfig.appId\n        }\n    };\n    const request = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (response.ok) {\n        const responseValue = await response.json();\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n        return completedAuthToken;\n    }\n    else {\n        throw await getErrorFromResponse('Generate Auth Token', response);\n    }\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nasync function refreshAuthToken(installations, forceRefresh = false) {\n    let tokenPromise;\n    const entry = await update(installations.appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n            // There is a valid token in the DB.\n            return oldEntry;\n        }\n        else if (oldAuthToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // There already is a token request in progress.\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n            return oldEntry;\n        }\n        else {\n            // No token or token expired.\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n            return inProgressEntry;\n        }\n    });\n    const authToken = tokenPromise\n        ? await tokenPromise\n        : entry.authToken;\n    return authToken;\n}\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\n    // Unfortunately, there is no way of reliably observing when a value in\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n    // so we need to poll.\n    let entry = await updateAuthTokenRequest(installations.appConfig);\n    while (entry.authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n        // generateAuthToken still in progress.\n        await sleep(100);\n        entry = await updateAuthTokenRequest(installations.appConfig);\n    }\n    const authToken = entry.authToken;\n    if (authToken.requestStatus === 0 /* RequestStatus.NOT_STARTED */) {\n        // The request timed out or failed in a different call. Try again.\n        return refreshAuthToken(installations, forceRefresh);\n    }\n    else {\n        return authToken;\n    }\n}\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(appConfig) {\n    return update(appConfig, oldEntry => {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* ErrorCode.NOT_REGISTERED */);\n        }\n        const oldAuthToken = oldEntry.authToken;\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n        }\n        return oldEntry;\n    });\n}\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\n    try {\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\n        await set(installations.appConfig, updatedInstallationEntry);\n        return authToken;\n    }\n    catch (e) {\n        if (isServerError(e) &&\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n            // Generate a new ID next time.\n            await remove(installations.appConfig);\n        }\n        else {\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* RequestStatus.NOT_STARTED */ } });\n            await set(installations.appConfig, updatedInstallationEntry);\n        }\n        throw e;\n    }\n}\nfunction isEntryRegistered(installationEntry) {\n    return (installationEntry !== undefined &&\n        installationEntry.registrationStatus === 2 /* RequestStatus.COMPLETED */);\n}\nfunction isAuthTokenValid(authToken) {\n    return (authToken.requestStatus === 2 /* RequestStatus.COMPLETED */ &&\n        !isAuthTokenExpired(authToken));\n}\nfunction isAuthTokenExpired(authToken) {\n    const now = Date.now();\n    return (now < authToken.creationTime ||\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n    const inProgressAuthToken = {\n        requestStatus: 1 /* RequestStatus.IN_PROGRESS */,\n        requestTime: Date.now()\n    };\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n    return (authToken.requestStatus === 1 /* RequestStatus.IN_PROGRESS */ &&\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function getId(installations) {\n    const installationsImpl = installations;\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\n    if (registrationPromise) {\n        registrationPromise.catch(console.error);\n    }\n    else {\n        // If the installation is already registered, update the authentication\n        // token if needed.\n        refreshAuthToken(installationsImpl).catch(console.error);\n    }\n    return installationEntry.fid;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nasync function getToken(installations, forceRefresh = false) {\n    const installationsImpl = installations;\n    await completeInstallationRegistration(installationsImpl);\n    // At this point we either have a Registered Installation in the DB, or we've\n    // already thrown an error.\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n    return authToken.token;\n}\nasync function completeInstallationRegistration(installations) {\n    const { registrationPromise } = await getInstallationEntry(installations);\n    if (registrationPromise) {\n        // A createInstallation request is in progress. Wait until it finishes.\n        await registrationPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteInstallationRequest(appConfig, installationEntry) {\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\n    const request = {\n        method: 'DELETE',\n        headers\n    };\n    const response = await retryIfServerError(() => fetch(endpoint, request));\n    if (!response.ok) {\n        throw await getErrorFromResponse('Delete Installation', response);\n    }\n}\nfunction getDeleteEndpoint(appConfig, { fid }) {\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nasync function deleteInstallations(installations) {\n    const { appConfig } = installations;\n    const entry = await update(appConfig, oldEntry => {\n        if (oldEntry && oldEntry.registrationStatus === 0 /* RequestStatus.NOT_STARTED */) {\n            // Delete the unregistered entry without sending a deleteInstallation request.\n            return undefined;\n        }\n        return oldEntry;\n    });\n    if (entry) {\n        if (entry.registrationStatus === 1 /* RequestStatus.IN_PROGRESS */) {\n            // Can't delete while trying to register.\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* ErrorCode.DELETE_PENDING_REGISTRATION */);\n        }\n        else if (entry.registrationStatus === 2 /* RequestStatus.COMPLETED */) {\n            if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* ErrorCode.APP_OFFLINE */);\n            }\n            else {\n                await deleteInstallationRequest(appConfig, entry);\n                await remove(appConfig);\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nfunction onIdChange(installations, callback) {\n    const { appConfig } = installations;\n    addCallback(appConfig, callback);\n    return () => {\n        removeCallback(appConfig, callback);\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nfunction getInstallations(app = getApp()) {\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\n    return installationsImpl;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw getMissingValueError('App Configuration');\n    }\n    if (!app.name) {\n        throw getMissingValueError('App Name');\n    }\n    // Required app config keys\n    const configKeys = [\n        'projectId',\n        'apiKey',\n        'appId'\n    ];\n    for (const keyName of configKeys) {\n        if (!app.options[keyName]) {\n            throw getMissingValueError(keyName);\n        }\n    }\n    return {\n        appName: app.name,\n        projectId: app.options.projectId,\n        apiKey: app.options.apiKey,\n        appId: app.options.appId\n    };\n}\nfunction getMissingValueError(valueName) {\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n        valueName\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\nconst publicFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Throws if app isn't configured properly.\n    const appConfig = extractAppConfig(app);\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n    const installationsImpl = {\n        app,\n        appConfig,\n        heartbeatServiceProvider,\n        _delete: () => Promise.resolve()\n    };\n    return installationsImpl;\n};\nconst internalFactory = (container) => {\n    const app = container.getProvider('app').getImmediate();\n    // Internal FIS instance relies on public FIS instance.\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n    const installationsInternal = {\n        getId: () => getId(installations),\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\n    };\n    return installationsInternal;\n};\nfunction registerInstallations() {\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n}\n\n/**\n * The Firebase Installations Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, validateIndexedDBOpenable, isIndexedDBAvailable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nconst DEFAULT_REGISTRATION_TIMEOUT = 10000;\nvar MessageType$1;\n(function (MessageType) {\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\nvar MessageType;\n(function (MessageType) {\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction arrayToBase64(array) {\n    const uint8Array = new Uint8Array(array);\n    const base64String = btoa(String.fromCharCode(...uint8Array));\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction base64ToArray(base64String) {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n    const rawData = atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\nasync function migrateOldDatabase(senderId) {\n    if ('databases' in indexedDB) {\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n        // typecast when it lands in TS types.\n        const databases = await indexedDB.databases();\n        const dbNames = databases.map(db => db.name);\n        if (!dbNames.includes(OLD_DB_NAME)) {\n            // old DB didn't exist, no need to open.\n            return null;\n        }\n    }\n    let tokenDetails = null;\n    const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n        upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n            var _a;\n            if (oldVersion < 2) {\n                // Database too old, skip migration.\n                return;\n            }\n            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                // Database did not exist. Nothing to do.\n                return;\n            }\n            const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n            const value = await objectStore.index('fcmSenderId').get(senderId);\n            await objectStore.clear();\n            if (!value) {\n                // No entry in the database, nothing to migrate.\n                return;\n            }\n            if (oldVersion === 2) {\n                const oldDetails = value;\n                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n                    return;\n                }\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                    subscriptionOptions: {\n                        auth: oldDetails.auth,\n                        p256dh: oldDetails.p256dh,\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: typeof oldDetails.vapidKey === 'string'\n                            ? oldDetails.vapidKey\n                            : arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n            else if (oldVersion === 3) {\n                const oldDetails = value;\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: oldDetails.createTime,\n                    subscriptionOptions: {\n                        auth: arrayToBase64(oldDetails.auth),\n                        p256dh: arrayToBase64(oldDetails.p256dh),\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n            else if (oldVersion === 4) {\n                const oldDetails = value;\n                tokenDetails = {\n                    token: oldDetails.fcmToken,\n                    createTime: oldDetails.createTime,\n                    subscriptionOptions: {\n                        auth: arrayToBase64(oldDetails.auth),\n                        p256dh: arrayToBase64(oldDetails.p256dh),\n                        endpoint: oldDetails.endpoint,\n                        swScope: oldDetails.swScope,\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\n                    }\n                };\n            }\n        }\n    });\n    db.close();\n    // Delete all old databases.\n    await deleteDB(OLD_DB_NAME);\n    await deleteDB('fcm_vapid_details_db');\n    await deleteDB('undefined');\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\nfunction checkTokenDetails(tokenDetails) {\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n        return false;\n    }\n    const { subscriptionOptions } = tokenDetails;\n    return (typeof tokenDetails.createTime === 'number' &&\n        tokenDetails.createTime > 0 &&\n        typeof tokenDetails.token === 'string' &&\n        tokenDetails.token.length > 0 &&\n        typeof subscriptionOptions.auth === 'string' &&\n        subscriptionOptions.auth.length > 0 &&\n        typeof subscriptionOptions.p256dh === 'string' &&\n        subscriptionOptions.p256dh.length > 0 &&\n        typeof subscriptionOptions.endpoint === 'string' &&\n        subscriptionOptions.endpoint.length > 0 &&\n        typeof subscriptionOptions.swScope === 'string' &&\n        subscriptionOptions.swScope.length > 0 &&\n        typeof subscriptionOptions.vapidKey === 'string' &&\n        subscriptionOptions.vapidKey.length > 0);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Exported for tests.\nconst DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\nlet dbPromise = null;\nfunction getDbPromise() {\n    if (!dbPromise) {\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n            upgrade: (upgradeDb, oldVersion) => {\n                // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n                // because if there are multiple versions between the old version and the current version, we\n                // want ALL the migrations that correspond to those versions to run, not only the last one.\n                // eslint-disable-next-line default-case\n                switch (oldVersion) {\n                    case 0:\n                        upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n                }\n            }\n        });\n    }\n    return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\nasync function dbGet(firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tokenDetails = (await db\n        .transaction(OBJECT_STORE_NAME)\n        .objectStore(OBJECT_STORE_NAME)\n        .get(key));\n    if (tokenDetails) {\n        return tokenDetails;\n    }\n    else {\n        // Check if there is a tokenDetails object in the old DB.\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n        if (oldTokenDetails) {\n            await dbSet(firebaseDependencies, oldTokenDetails);\n            return oldTokenDetails;\n        }\n    }\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nasync function dbSet(firebaseDependencies, tokenDetails) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n    await tx.done;\n    return tokenDetails;\n}\n/** Removes record(s) from the objectStore that match the given key. */\nasync function dbRemove(firebaseDependencies) {\n    const key = getKey(firebaseDependencies);\n    const db = await getDbPromise();\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n    await tx.done;\n}\nfunction getKey({ appConfig }) {\n    return appConfig.appId;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ERROR_MAP = {\n    [\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\n    [\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\n    [\"only-available-in-sw\" /* ErrorCode.AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\n    [\"permission-default\" /* ErrorCode.PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\n    [\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\n    [\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\n    [\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n    [\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\n    [\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n    [\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\n    [\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\n        'user from FCM: {$errorInfo}',\n    [\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\n    [\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\n    [\"use-sw-after-get-token\" /* ErrorCode.USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\n        'called before calling getToken() to ensure your service worker is used.',\n    [\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n    [\"invalid-bg-handler\" /* ErrorCode.INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\n    [\"invalid-vapid-key\" /* ErrorCode.INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\n    [\"use-vapid-key-after-get-token\" /* ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\n        'called before calling getToken() to ensure your VAPID key is used.'\n};\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\n    const headers = await getHeaders(firebaseDependencies);\n    const body = getBody(subscriptionOptions);\n    const subscribeOptions = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body)\n    };\n    let responseData;\n    try {\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n        responseData = await response.json();\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n    if (responseData.error) {\n        const message = responseData.error.message;\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* ErrorCode.TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: message\n        });\n    }\n    if (!responseData.token) {\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN */);\n    }\n    return responseData.token;\n}\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\n    const headers = await getHeaders(firebaseDependencies);\n    const body = getBody(tokenDetails.subscriptionOptions);\n    const updateOptions = {\n        method: 'PATCH',\n        headers,\n        body: JSON.stringify(body)\n    };\n    let responseData;\n    try {\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\n        responseData = await response.json();\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n    if (responseData.error) {\n        const message = responseData.error.message;\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* ErrorCode.TOKEN_UPDATE_FAILED */, {\n            errorInfo: message\n        });\n    }\n    if (!responseData.token) {\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* ErrorCode.TOKEN_UPDATE_NO_TOKEN */);\n    }\n    return responseData.token;\n}\nasync function requestDeleteToken(firebaseDependencies, token) {\n    const headers = await getHeaders(firebaseDependencies);\n    const unsubscribeOptions = {\n        method: 'DELETE',\n        headers\n    };\n    try {\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\n        const responseData = await response.json();\n        if (responseData.error) {\n            const message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n                errorInfo: message\n            });\n        }\n    }\n    catch (err) {\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* ErrorCode.TOKEN_UNSUBSCRIBE_FAILED */, {\n            errorInfo: err === null || err === void 0 ? void 0 : err.toString()\n        });\n    }\n}\nfunction getEndpoint({ projectId }) {\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\n}\nasync function getHeaders({ appConfig, installations }) {\n    const authToken = await installations.getToken();\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': appConfig.apiKey,\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\n    });\n}\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\n    const body = {\n        web: {\n            endpoint,\n            auth,\n            p256dh\n        }\n    };\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\n        body.web.applicationPubKey = vapidKey;\n    }\n    return body;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\nasync function getTokenInternal(messaging) {\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n    const subscriptionOptions = {\n        vapidKey: messaging.vapidKey,\n        swScope: messaging.swRegistration.scope,\n        endpoint: pushSubscription.endpoint,\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n    };\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\n    if (!tokenDetails) {\n        // No token, get a new one.\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    }\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n        // Invalid token, get a new one.\n        try {\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        }\n        catch (e) {\n            // Suppress errors because of #2364\n            console.warn(e);\n        }\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n    }\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n        // Weekly token refresh\n        return updateToken(messaging, {\n            token: tokenDetails.token,\n            createTime: Date.now(),\n            subscriptionOptions\n        });\n    }\n    else {\n        // Valid token, nothing to do.\n        return tokenDetails.token;\n    }\n}\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nasync function deleteTokenInternal(messaging) {\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\n    if (tokenDetails) {\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n        await dbRemove(messaging.firebaseDependencies);\n    }\n    // Unsubscribe from the push subscription.\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\n    if (pushSubscription) {\n        return pushSubscription.unsubscribe();\n    }\n    // If there's no SW, consider it a success.\n    return true;\n}\nasync function updateToken(messaging, tokenDetails) {\n    try {\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n        return updatedToken;\n    }\n    catch (e) {\n        throw e;\n    }\n}\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\n    const tokenDetails = {\n        token,\n        createTime: Date.now(),\n        subscriptionOptions\n    };\n    await dbSet(firebaseDependencies, tokenDetails);\n    return tokenDetails.token;\n}\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(swRegistration, vapidKey) {\n    const subscription = await swRegistration.pushManager.getSubscription();\n    if (subscription) {\n        return subscription;\n    }\n    return swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n        // submitted to pushManager#subscribe must be of type Uint8Array.\n        applicationServerKey: base64ToArray(vapidKey)\n    });\n}\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(dbOptions, currentOptions) {\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction externalizePayload(internalPayload) {\n    const payload = {\n        from: internalPayload.from,\n        // eslint-disable-next-line camelcase\n        collapseKey: internalPayload.collapse_key,\n        // eslint-disable-next-line camelcase\n        messageId: internalPayload.fcmMessageId\n    };\n    propagateNotificationPayload(payload, internalPayload);\n    propagateDataPayload(payload, internalPayload);\n    propagateFcmOptions(payload, internalPayload);\n    return payload;\n}\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n    if (!messagePayloadInternal.notification) {\n        return;\n    }\n    payload.notification = {};\n    const title = messagePayloadInternal.notification.title;\n    if (!!title) {\n        payload.notification.title = title;\n    }\n    const body = messagePayloadInternal.notification.body;\n    if (!!body) {\n        payload.notification.body = body;\n    }\n    const image = messagePayloadInternal.notification.image;\n    if (!!image) {\n        payload.notification.image = image;\n    }\n    const icon = messagePayloadInternal.notification.icon;\n    if (!!icon) {\n        payload.notification.icon = icon;\n    }\n}\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n    if (!messagePayloadInternal.data) {\n        return;\n    }\n    payload.data = messagePayloadInternal.data;\n}\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n    var _a, _b, _c, _d, _e;\n    // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n    if (!messagePayloadInternal.fcmOptions &&\n        !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n        return;\n    }\n    payload.fcmOptions = {};\n    const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n    if (!!link) {\n        payload.fcmOptions.link = link;\n    }\n    // eslint-disable-next-line camelcase\n    const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n    if (!!analyticsLabel) {\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction isConsoleMessage(data) {\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\nfunction _mergeStrings(s1, s2) {\n    const resultArray = [];\n    for (let i = 0; i < s1.length; i++) {\n        resultArray.push(s1.charAt(i));\n        if (i < s2.length) {\n            resultArray.push(s2.charAt(i));\n        }\n    }\n    return resultArray.join('');\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw getMissingValueError('App Configuration Object');\n    }\n    if (!app.name) {\n        throw getMissingValueError('App Name');\n    }\n    // Required app config keys\n    const configKeys = [\n        'projectId',\n        'apiKey',\n        'appId',\n        'messagingSenderId'\n    ];\n    const { options } = app;\n    for (const keyName of configKeys) {\n        if (!options[keyName]) {\n            throw getMissingValueError(keyName);\n        }\n    }\n    return {\n        appName: app.name,\n        projectId: options.projectId,\n        apiKey: options.apiKey,\n        appId: options.appId,\n        senderId: options.messagingSenderId\n    };\n}\nfunction getMissingValueError(valueName) {\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* ErrorCode.MISSING_APP_CONFIG_VALUES */, {\n        valueName\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass MessagingService {\n    constructor(app, installations, analyticsProvider) {\n        // logging is only done with end user consent. Default to false.\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\n        this.onBackgroundMessageHandler = null;\n        this.onMessageHandler = null;\n        this.logEvents = [];\n        this.isLogServiceStarted = false;\n        const appConfig = extractAppConfig(app);\n        this.firebaseDependencies = {\n            app,\n            appConfig,\n            installations,\n            analyticsProvider\n        };\n    }\n    _delete() {\n        return Promise.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function registerDefaultSw(messaging) {\n    try {\n        messaging.swRegistration = await navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n            scope: DEFAULT_SW_SCOPE\n        });\n        // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n        // is stuck with the old version. For example,\n        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n        // sw if there was an update.\n        messaging.swRegistration.update().catch(() => {\n            /* it is non blocking and we don't care if it failed */\n        });\n        await waitForRegistrationActive(messaging.swRegistration);\n    }\n    catch (e) {\n        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* ErrorCode.FAILED_DEFAULT_REGISTRATION */, {\n            browserErrorMessage: e === null || e === void 0 ? void 0 : e.message\n        });\n    }\n}\n/**\n * Waits for registration to become active. MDN documentation claims that\n * a service worker registration should be ready to use after awaiting\n * navigator.serviceWorker.register() but that doesn't seem to be the case in\n * practice, causing the SDK to throw errors when calling\n * swRegistration.pushManager.subscribe() too soon after register(). The only\n * solution seems to be waiting for the service worker registration `state`\n * to become \"active\".\n */\nasync function waitForRegistrationActive(registration) {\n    return new Promise((resolve, reject) => {\n        const rejectTimeout = setTimeout(() => reject(new Error(`Service worker not registered after ${DEFAULT_REGISTRATION_TIMEOUT} ms`)), DEFAULT_REGISTRATION_TIMEOUT);\n        const incomingSw = registration.installing || registration.waiting;\n        if (registration.active) {\n            clearTimeout(rejectTimeout);\n            resolve();\n        }\n        else if (incomingSw) {\n            incomingSw.onstatechange = ev => {\n                var _a;\n                if (((_a = ev.target) === null || _a === void 0 ? void 0 : _a.state) === 'activated') {\n                    incomingSw.onstatechange = null;\n                    clearTimeout(rejectTimeout);\n                    resolve();\n                }\n            };\n        }\n        else {\n            clearTimeout(rejectTimeout);\n            reject(new Error('No incoming service worker found.'));\n        }\n    });\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function updateSwReg(messaging, swRegistration) {\n    if (!swRegistration && !messaging.swRegistration) {\n        await registerDefaultSw(messaging);\n    }\n    if (!swRegistration && !!messaging.swRegistration) {\n        return;\n    }\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n        throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* ErrorCode.INVALID_SW_REGISTRATION */);\n    }\n    messaging.swRegistration = swRegistration;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function updateVapidKey(messaging, vapidKey) {\n    if (!!vapidKey) {\n        messaging.vapidKey = vapidKey;\n    }\n    else if (!messaging.vapidKey) {\n        messaging.vapidKey = DEFAULT_VAPID_KEY;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function getToken$1(messaging, options) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    if (Notification.permission === 'default') {\n        await Notification.requestPermission();\n    }\n    if (Notification.permission !== 'granted') {\n        throw ERROR_FACTORY.create(\"permission-blocked\" /* ErrorCode.PERMISSION_BLOCKED */);\n    }\n    await updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n    await updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n    return getTokenInternal(messaging);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function logToScion(messaging, messageType, data) {\n    const eventType = getEventType(messageType);\n    const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n        /* eslint-disable camelcase */\n        message_id: data[CONSOLE_CAMPAIGN_ID],\n        message_name: data[CONSOLE_CAMPAIGN_NAME],\n        message_time: data[CONSOLE_CAMPAIGN_TIME],\n        message_device_time: Math.floor(Date.now() / 1000)\n        /* eslint-enable camelcase */\n    });\n}\nfunction getEventType(messageType) {\n    switch (messageType) {\n        case MessageType.NOTIFICATION_CLICKED:\n            return 'notification_open';\n        case MessageType.PUSH_RECEIVED:\n            return 'notification_foreground';\n        default:\n            throw new Error();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function messageEventListener(messaging, event) {\n    const internalPayload = event.data;\n    if (!internalPayload.isFirebaseMessaging) {\n        return;\n    }\n    if (messaging.onMessageHandler &&\n        internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n        if (typeof messaging.onMessageHandler === 'function') {\n            messaging.onMessageHandler(externalizePayload(internalPayload));\n        }\n        else {\n            messaging.onMessageHandler.next(externalizePayload(internalPayload));\n        }\n    }\n    // Log to Scion if applicable\n    const dataPayload = internalPayload.data;\n    if (isConsoleMessage(dataPayload) &&\n        dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\n        await logToScion(messaging, internalPayload.messageType, dataPayload);\n    }\n}\n\nconst name = \"@firebase/messaging\";\nconst version = \"0.12.22\";\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst WindowMessagingFactory = (container) => {\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n    navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\n    return messaging;\n};\nconst WindowMessagingInternalFactory = (container) => {\n    const messaging = container\n        .getProvider('messaging')\n        .getImmediate();\n    const messagingInternal = {\n        getToken: (options) => getToken$1(messaging, options)\n    };\n    return messagingInternal;\n};\nfunction registerMessagingInWindow() {\n    _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* ComponentType.PUBLIC */));\n    _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* ComponentType.PRIVATE */));\n    registerVersion(name, version);\n    // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n    registerVersion(name, version, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nasync function isWindowSupported() {\n    try {\n        // This throws if open() is unsupported, so adding it to the conditional\n        // statement below can cause an uncaught error.\n        await validateIndexedDBOpenable();\n    }\n    catch (e) {\n        return false;\n    }\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\n    return (typeof window !== 'undefined' &&\n        isIndexedDBAvailable() &&\n        areCookiesEnabled() &&\n        'serviceWorker' in navigator &&\n        'PushManager' in window &&\n        'Notification' in window &&\n        'fetch' in window &&\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n        PushSubscription.prototype.hasOwnProperty('getKey'));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function deleteToken$1(messaging) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    if (!messaging.swRegistration) {\n        await registerDefaultSw(messaging);\n    }\n    return deleteTokenInternal(messaging);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction onMessage$1(messaging, nextOrObserver) {\n    if (!navigator) {\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* ErrorCode.AVAILABLE_IN_WINDOW */);\n    }\n    messaging.onMessageHandler = nextOrObserver;\n    return () => {\n        messaging.onMessageHandler = null;\n    };\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nfunction getMessagingInWindow(app = getApp()) {\n    // Conscious decision to make this async check non-blocking during the messaging instance\n    // initialization phase for performance consideration. An error would be thrown latter for\n    // developer's information. Developers can then choose to import and call `isSupported` for\n    // special handling.\n    isWindowSupported().then(isSupported => {\n        // If `isWindowSupported()` resolved, but returned false.\n        if (!isSupported) {\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* ErrorCode.UNSUPPORTED_BROWSER */);\n        }\n    }, _ => {\n        // If `isWindowSupported()` rejected.\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* ErrorCode.INDEXED_DB_UNSUPPORTED */);\n    });\n    return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns a Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optional service worker registration.\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nasync function getToken(messaging, options) {\n    messaging = getModularInstance(messaging);\n    return getToken$1(messaging, options);\n}\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nfunction deleteToken(messaging) {\n    messaging = getModularInstance(messaging);\n    return deleteToken$1(messaging);\n}\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nfunction onMessage(messaging, nextOrObserver) {\n    messaging = getModularInstance(messaging);\n    return onMessage$1(messaging, nextOrObserver);\n}\n\n/**\n * The Firebase Cloud Messaging Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\nregisterMessagingInWindow();\n\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };\n//# sourceMappingURL=index.esm2017.js.map\n","import { WebPlugin } from '@capacitor/core';\nimport { deleteToken, getMessaging, getToken, isSupported as isSupportedInWeb, onMessage, } from 'firebase/messaging';\nexport class FirebaseMessagingWeb extends WebPlugin {\n    constructor() {\n        super();\n        isSupportedInWeb().then(supported => {\n            if (!supported) {\n                return;\n            }\n            const messaging = getMessaging();\n            onMessage(messaging, payload => this.handleNotificationReceived(payload));\n        });\n    }\n    async checkPermissions() {\n        const isSupported = await isSupportedInWeb();\n        if (!isSupported) {\n            return {\n                receive: 'denied',\n            };\n        }\n        const receive = this.convertNotificationPermissionToPermissionState(Notification.permission);\n        return {\n            receive,\n        };\n    }\n    async requestPermissions() {\n        const isSupported = await isSupportedInWeb();\n        if (!isSupported) {\n            return {\n                receive: 'denied',\n            };\n        }\n        const notificationPermission = await Notification.requestPermission();\n        const receive = this.convertNotificationPermissionToPermissionState(notificationPermission);\n        return {\n            receive,\n        };\n    }\n    async isSupported() {\n        const isSupported = await isSupportedInWeb();\n        return {\n            isSupported,\n        };\n    }\n    async getToken(options) {\n        const messaging = getMessaging();\n        const token = await getToken(messaging, {\n            vapidKey: options.vapidKey,\n            serviceWorkerRegistration: options.serviceWorkerRegistration,\n        });\n        return {\n            token,\n        };\n    }\n    async deleteToken() {\n        const messaging = getMessaging();\n        await deleteToken(messaging);\n    }\n    async getDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async removeDeliveredNotifications(_options) {\n        this.throwUnavailableError();\n    }\n    async removeAllDeliveredNotifications() {\n        this.throwUnavailableError();\n    }\n    async subscribeToTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async unsubscribeFromTopic(_options) {\n        this.throwUnavailableError();\n    }\n    async createChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async deleteChannel(_options) {\n        this.throwUnavailableError();\n    }\n    async listChannels() {\n        this.throwUnavailableError();\n    }\n    handleNotificationReceived(messagePayload) {\n        const notification = this.createNotificationResult(messagePayload);\n        const event = {\n            notification,\n        };\n        this.notifyListeners(FirebaseMessagingWeb.notificationReceivedEvent, event);\n    }\n    createNotificationResult(messagePayload) {\n        var _a, _b, _c;\n        const notification = {\n            body: (_a = messagePayload.notification) === null || _a === void 0 ? void 0 : _a.body,\n            data: messagePayload.data,\n            id: messagePayload.messageId,\n            image: (_b = messagePayload.notification) === null || _b === void 0 ? void 0 : _b.image,\n            title: (_c = messagePayload.notification) === null || _c === void 0 ? void 0 : _c.title,\n        };\n        return notification;\n    }\n    convertNotificationPermissionToPermissionState(permission) {\n        let state = 'prompt';\n        switch (permission) {\n            case 'granted':\n                state = 'granted';\n                break;\n            case 'denied':\n                state = 'denied';\n                break;\n        }\n        return state;\n    }\n    throwUnavailableError() {\n        throw this.unavailable('Not available on web.');\n    }\n}\nFirebaseMessagingWeb.notificationReceivedEvent = 'notificationReceived';\n//# sourceMappingURL=web.js.map"],"names":["name","version","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","isServerError","error","FirebaseError","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","getExpiresInFromResponseExpiresIn","getErrorFromResponse","requestName","errorData","getHeaders","apiKey","getHeadersWithAuth","appConfig","refreshToken","headers","getAuthorizationHeader","retryIfServerError","fn","result","responseExpiresIn","createInstallationRequest","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","body","request","responseValue","sleep","ms","resolve","bufferToBase64UrlSafe","array","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","encode","getKey","fidChangeCallbacks","fidChanged","key","callFidChangeCallbacks","broadcastFidChange","callbacks","callback","channel","getBroadcastChannel","closeBroadcastChannel","broadcastChannel","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","openDB","db","oldVersion","set","value","tx","objectStore","oldValue","remove","update","updateFn","store","newValue","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","clearTimedOutRequest","registrationPromiseWithError","inProgressEntry","registerInstallation","waitUntilFidRegistration","registeredInstallationEntry","e","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","authToken","hasAuthTokenRequestTimedOut","updatedInstallationEntry","isAuthTokenExpired","now","inProgressAuthToken","getId","installationsImpl","getToken","completeInstallationRegistration","extractAppConfig","app","getMissingValueError","configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","_getProvider","internalFactory","registerInstallations","_registerComponent","Component","registerVersion","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","DEFAULT_REGISTRATION_TIMEOUT","MessageType$1","MessageType","arrayToBase64","uint8Array","base64ToArray","base64String","padding","base64","rawData","outputArray","i","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","tokenDetails","newVersion","upgradeTransaction","_a","oldDetails","deleteDB","checkTokenDetails","subscriptionOptions","upgradeDb","dbGet","firebaseDependencies","oldTokenDetails","dbSet","dbRemove","ERROR_MAP","requestGetToken","getBody","subscribeOptions","responseData","getEndpoint","err","message","requestUpdateToken","updateOptions","requestDeleteToken","token","unsubscribeOptions","p256dh","auth","vapidKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","pushSubscription","getPushSubscription","isTokenValid","updateToken","getNewToken","deleteTokenInternal","updatedToken","updatedTokenDetails","swRegistration","subscription","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","propagateNotificationPayload","propagateDataPayload","propagateFcmOptions","messagePayloadInternal","title","image","icon","_b","_c","_d","_e","link","analyticsLabel","isConsoleMessage","data","_mergeStrings","s1","s2","resultArray","options","MessagingService","analyticsProvider","registerDefaultSw","waitForRegistrationActive","registration","reject","rejectTimeout","incomingSw","ev","updateSwReg","updateVapidKey","getToken$1","logToScion","messageType","eventType","getEventType","messageEventListener","event","dataPayload","WindowMessagingFactory","WindowMessagingInternalFactory","registerMessagingInWindow","isWindowSupported","validateIndexedDBOpenable","isIndexedDBAvailable","areCookiesEnabled","deleteToken$1","onMessage$1","nextOrObserver","getMessagingInWindow","getApp","isSupported","_","getModularInstance","deleteToken","onMessage","FirebaseMessagingWeb","WebPlugin","isSupportedInWeb","supported","getMessaging","notificationPermission","_options","messagePayload","permission","state"],"mappings":"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","x_google_ignoreList":[0,1,2]}